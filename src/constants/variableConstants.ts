import { MeasurementAggregatedDto, MeasurementRawDto } from '../api/openAPI';

export type RawVariables = Omit<MeasurementRawDto, 'timestamp' | 'uptime'>;
export type AggregatedVariables = Omit<MeasurementAggregatedDto, 'timestamp' | 'uptime'>;

export const RawVariableLabelMap: Record<keyof RawVariables, string> = {
    voltagePhase1: 'Phase 1 Voltage',
    voltagePhase2: 'Phase 2 Voltage',
    voltagePhase3: 'Phase 3 Voltage',
    positiveActivePower: 'Positive Active Power',
    positiveActiveEnergyTotal: 'Positive Active Energy Total',
    negativeActivePower: 'Negative Active Power',
    negativeActiveEnergyTotal: 'Negative Active Energy Total',
    reactiveEnergyQuadrant1Total: 'Reactive Energy Quadrant 1 Total',
    reactiveEnergyQuadrant3Total: 'Reactive Energy Quadrant 3 Total',
    totalPower: 'Total Power',
    currentPhase1: 'Current Phase 1',
    currentPhase2: 'Current Phase 2',
    currentPhase3: 'Current Phase 3',
};

export const AggregatedVariableLabelMap: Record<keyof AggregatedVariables, string> = {
    minPositiveActivePower: 'Minimum Positive Active Power',
    maxPositiveActivePower: 'Maximum Positive Active Power',
    avgPositiveActivePower: 'Average Positive Active Power',
    medPositiveActivePower: 'Median Positive Active Power',
    minPositiveActiveEnergyTotal: 'Minimum Positive Active Energy Total',
    maxPositiveActiveEnergyTotal: 'Maximum Positive Active Energy Total',
    avgPositiveActiveEnergyTotal: 'Average Positive Active Energy Total',
    medPositiveActiveEnergyTotal: 'Median Positive Active Energy Total',
    minNegativeActivePower: 'Minimum Negative Active Power',
    maxNegativeActivePower: 'Maximum Negative Active Power',
    avgNegativeActivePower: 'Average Negative Active Power',
    medNegativeActivePower: 'Median Negative Active Power',
    minNegativeActiveEnergyTotal: 'Minimum Negative Active Energy Total',
    maxNegativeActiveEnergyTotal: 'Maximum Negative Active Energy Total',
    avgNegativeActiveEnergyTotal: 'Average Negative Active Energy Total',
    medNegativeActiveEnergyTotal: 'Median Negative Active Energy Total',
    minReactiveEnergyQuadrant1Total: 'Minimum Reactive Energy Quadrant 1 Total',
    maxReactiveEnergyQuadrant1Total: 'Maximum Reactive Energy Quadrant 1 Total',
    avgReactiveEnergyQuadrant1Total: 'Average Reactive Energy Quadrant 1 Total',
    medReactiveEnergyQuadrant1Total: 'Median Reactive Energy Quadrant 1 Total',
    minReactiveEnergyQuadrant3Total: 'Minimum Reactive Energy Quadrant 3 Total',
    maxReactiveEnergyQuadrant3Total: 'Maximum Reactive Energy Quadrant 3 Total',
    avgReactiveEnergyQuadrant3Total: 'Average Reactive Energy Quadrant 3 Total',
    medReactiveEnergyQuadrant3Total: 'Median Reactive Energy Quadrant 3 Total',
    minTotalPower: 'Minimum Total Power',
    maxTotalPower: 'Maximum Total Power',
    avgTotalPower: 'Average Total Power',
    medTotalPower: 'Median Total Power',
    minCurrentPhase1: 'Minimum Current Phase 1',
    maxCurrentPhase1: 'Maximum Current Phase 1',
    avgCurrentPhase1: 'Average Current Phase 1',
    medCurrentPhase1: 'Median Current Phase 1',
    minVoltagePhase1: 'Minimum Voltage Phase 1',
    maxVoltagePhase1: 'Maximum Voltage Phase 1',
    avgVoltagePhase1: 'Average Voltage Phase 1',
    medVoltagePhase1: 'Median Voltage Phase 1',
    minCurrentPhase2: 'Minimum Current Phase 2',
    maxCurrentPhase2: 'Maximum Current Phase 2',
    avgCurrentPhase2: 'Average Current Phase 2',
    medCurrentPhase2: 'Median Current Phase 2',
    minVoltagePhase2: 'Minimum Voltage Phase 2',
    maxVoltagePhase2: 'Maximum Voltage Phase 2',
    avgVoltagePhase2: 'Average Voltage Phase 2',
    medVoltagePhase2: 'Median Voltage Phase 2',
    minCurrentPhase3: 'Minimum Current Phase 3',
    maxCurrentPhase3: 'Maximum Current Phase 3',
    avgCurrentPhase3: 'Average Current Phase 3',
    medCurrentPhase3: 'Median Current Phase 3',
    minVoltagePhase3: 'Minimum Voltage Phase 3',
    maxVoltagePhase3: 'Maximum Voltage Phase 3',
    avgVoltagePhase3: 'Average Voltage Phase 3',
    medVoltagePhase3: 'Median Voltage Phase 3',
    amountOfMeasurements: 'Amount of Measurements',
};
